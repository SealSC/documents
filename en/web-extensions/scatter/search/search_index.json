{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This document is for sealsc-web-extension-scatter project. sealsc-web-extension-scatter is a wrapper of Scatter web extension. This wrapper is conform Seal SC web extension protocol . NOTE: This project is only for EOS. If you want to use Scatter to access Ethereum or Tron, please use original Scatter library","title":"Getting started"},{"location":"page/apiRef/extensionActions/","text":"Extends ExtensionActions Constructor constructor(extension) Parameter extension - ScatterExtension Property extension Type: ScatterWrapper Description: Scatter wrapper instance passed by constructor. Methods loadContract async loacContract(abi, address) Description Load smart contract to a ContractWrapper instance. Parameters : abi - Unused address - String : Smart contract account. Returns : Promise Result ContractWrapper , Status : ContractWrapper instance will be set into the data field of Result if Status is SUCCESS . transfer async transfer(to, amount, memo, extra) Description Transfer EOS`. Parameters : to - String : Transfer target address. amount - Number : How many EOS will be transferred. memo - String : Transfer memo. extra - Unused : Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if Status is SUCCESS . transferToken async transferToken(wrapper, to, amount, extra) Description Transfer contract based token. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. to - String : Token transfer target address. amount - String | Number How many tokens will be transferred. You can pass a string with token symbol in it or a number. But if you pass a Number, you must pass the extra parameter and set the symbol field. extra - TransferTokenExtraInfo : The token transaction information, such as memo, symbol etc. Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if Status is SUCCESS . getAccount async getAccount() Description Get selected account in Scatter. Returns : Promise Result String , Status : Account string will be set into the data field of Result if Status is SUCCESS .","title":"ScatterActions"},{"location":"page/apiRef/extensionActions/#extends","text":"ExtensionActions","title":"Extends"},{"location":"page/apiRef/extensionActions/#constructor","text":"constructor(extension) Parameter extension - ScatterExtension","title":"Constructor"},{"location":"page/apiRef/extensionActions/#property","text":"","title":"Property"},{"location":"page/apiRef/extensionActions/#extension","text":"Type: ScatterWrapper Description: Scatter wrapper instance passed by constructor.","title":"extension"},{"location":"page/apiRef/extensionActions/#methods","text":"","title":"Methods"},{"location":"page/apiRef/extensionActions/#loadcontract","text":"async loacContract(abi, address) Description Load smart contract to a ContractWrapper instance. Parameters : abi - Unused address - String : Smart contract account. Returns : Promise Result ContractWrapper , Status : ContractWrapper instance will be set into the data field of Result if Status is SUCCESS .","title":"loadContract"},{"location":"page/apiRef/extensionActions/#transfer","text":"async transfer(to, amount, memo, extra) Description Transfer EOS`. Parameters : to - String : Transfer target address. amount - Number : How many EOS will be transferred. memo - String : Transfer memo. extra - Unused : Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if Status is SUCCESS .","title":"transfer"},{"location":"page/apiRef/extensionActions/#transfertoken","text":"async transferToken(wrapper, to, amount, extra) Description Transfer contract based token. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. to - String : Token transfer target address. amount - String | Number How many tokens will be transferred. You can pass a string with token symbol in it or a number. But if you pass a Number, you must pass the extra parameter and set the symbol field. extra - TransferTokenExtraInfo : The token transaction information, such as memo, symbol etc. Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if Status is SUCCESS .","title":"transferToken"},{"location":"page/apiRef/extensionActions/#getaccount","text":"async getAccount() Description Get selected account in Scatter. Returns : Promise Result String , Status : Account string will be set into the data field of Result if Status is SUCCESS .","title":"getAccount"},{"location":"page/apiRef/extensionChecker/","text":"Extends ExtensionActions Constructor constructor(extension) Parameter extension - ScatterExtension Property extension Type: ScatterExtension Description: Scatter wrapper instance passed by constructor. Methods installed async installed() Description Check if Scatter web extension was installed. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if Scatter installed. isMainnet async isMainnet() Description Check if Scatter connected to mainnet. Returns : Promise Result Bool , Status : If Status is SUCCESS , the data field of Result will be true if Scatter connected to EOS mainnet. isLogin async isLogin() Description Check if Scatter is logged in. Returns : Promise Result Bool , Status : If Status is SUCCESS , the data field of Result will be true if Scatter was login.","title":"ScatterChecker"},{"location":"page/apiRef/extensionChecker/#extends","text":"ExtensionActions","title":"Extends"},{"location":"page/apiRef/extensionChecker/#constructor","text":"constructor(extension) Parameter extension - ScatterExtension","title":"Constructor"},{"location":"page/apiRef/extensionChecker/#property","text":"","title":"Property"},{"location":"page/apiRef/extensionChecker/#extension","text":"Type: ScatterExtension Description: Scatter wrapper instance passed by constructor.","title":"extension"},{"location":"page/apiRef/extensionChecker/#methods","text":"","title":"Methods"},{"location":"page/apiRef/extensionChecker/#installed","text":"async installed() Description Check if Scatter web extension was installed. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if Scatter installed.","title":"installed"},{"location":"page/apiRef/extensionChecker/#ismainnet","text":"async isMainnet() Description Check if Scatter connected to mainnet. Returns : Promise Result Bool , Status : If Status is SUCCESS , the data field of Result will be true if Scatter connected to EOS mainnet.","title":"isMainnet"},{"location":"page/apiRef/extensionChecker/#islogin","text":"async isLogin() Description Check if Scatter is logged in. Returns : Promise Result Bool , Status : If Status is SUCCESS , the data field of Result will be true if Scatter was login.","title":"isLogin"},{"location":"page/apiRef/extensionConnector/","text":"Extends ExtensionConnector Constructor constructor(extension) Parameter extension - ScatterExtension Property extension Type: ScatterExtension Description: Scatter wrapper instance passed by constructor. Methods link async link() Description Connect user to the Scatter. This method will call out Scatter if user are not connected to it. This is useful when Scatter is not logged in. Returns : Promise Result String , Status : Selected account in Scatter will be set into the data field of Result if link successfully. unlink async unlink() Description Disconnect user and Scatter. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if unlink successfully.","title":"ScatterConnector"},{"location":"page/apiRef/extensionConnector/#extends","text":"ExtensionConnector","title":"Extends"},{"location":"page/apiRef/extensionConnector/#constructor","text":"constructor(extension) Parameter extension - ScatterExtension","title":"Constructor"},{"location":"page/apiRef/extensionConnector/#property","text":"","title":"Property"},{"location":"page/apiRef/extensionConnector/#extension","text":"Type: ScatterExtension Description: Scatter wrapper instance passed by constructor.","title":"extension"},{"location":"page/apiRef/extensionConnector/#methods","text":"","title":"Methods"},{"location":"page/apiRef/extensionConnector/#link","text":"async link() Description Connect user to the Scatter. This method will call out Scatter if user are not connected to it. This is useful when Scatter is not logged in. Returns : Promise Result String , Status : Selected account in Scatter will be set into the data field of Result if link successfully.","title":"link"},{"location":"page/apiRef/extensionConnector/#unlink","text":"async unlink() Description Disconnect user and Scatter. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if unlink successfully.","title":"unlink"},{"location":"page/apiRef/extensionContractCaller/","text":"Extends ExtensionContractCaller Constructor constructor(extension) Parameter extension - ScatterExtension Property extension Type: ScatterExtension Description: Scatter wrapper instance passed by constructor. Methods onChainCall async onChainCall(wrapper, method, param, amount, extra) Description Invoke a smart contract's method. This method may change the mart contract state. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. method - String : Which method in the contract will be called. param - Object : Data for the contract method's parameter. amount - Unused : extra - Unused : Returns : Promise Result String , Status : Transaction hash will be set into the data field of Result if contract called successfully. offChainCall async offChainCall(wrapper, table, param) Description This methods will read table of the smart contract on EOS. Parameters : table - ContractWrapper : A ContractWrapper instance returned by loadContract method. table - String : Table name of the smart contract. param - OffChainCallParam : Scope and limit for table query. Returns : Promise Result Any , Status : Table rows of the smart contract will be set into the data field of Result if contract called successfully.","title":"ScatterContractCaller"},{"location":"page/apiRef/extensionContractCaller/#extends","text":"ExtensionContractCaller","title":"Extends"},{"location":"page/apiRef/extensionContractCaller/#constructor","text":"constructor(extension) Parameter extension - ScatterExtension","title":"Constructor"},{"location":"page/apiRef/extensionContractCaller/#property","text":"","title":"Property"},{"location":"page/apiRef/extensionContractCaller/#extension","text":"Type: ScatterExtension Description: Scatter wrapper instance passed by constructor.","title":"extension"},{"location":"page/apiRef/extensionContractCaller/#methods","text":"","title":"Methods"},{"location":"page/apiRef/extensionContractCaller/#onchaincall","text":"async onChainCall(wrapper, method, param, amount, extra) Description Invoke a smart contract's method. This method may change the mart contract state. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. method - String : Which method in the contract will be called. param - Object : Data for the contract method's parameter. amount - Unused : extra - Unused : Returns : Promise Result String , Status : Transaction hash will be set into the data field of Result if contract called successfully.","title":"onChainCall"},{"location":"page/apiRef/extensionContractCaller/#offchaincall","text":"async offChainCall(wrapper, table, param) Description This methods will read table of the smart contract on EOS. Parameters : table - ContractWrapper : A ContractWrapper instance returned by loadContract method. table - String : Table name of the smart contract. param - OffChainCallParam : Scope and limit for table query. Returns : Promise Result Any , Status : Table rows of the smart contract will be set into the data field of Result if contract called successfully.","title":"offChainCall"},{"location":"page/apiRef/extensionWrapper/","text":"Extends ExtensionWrapper Constructor constructor() Property checker Type: ScatterChecker Description: Provide some basic check function such as isLogin, isMainnet etc. connector Type: ScatterConnector Description: Provide connection capability to the web extension. contractCaller Type: ScatterContractCaller Description: Provide smart contract invoke and read capability. actions Type: ScatterActions Description: Provide sets of functions to access EOS, such as transfer, getAccount. webjsInstance Type: ScatterJS.scatter Description: scatter instance from scatter-core. Methods load async load() Description Load ScatterJS.scatter instance to webjsInstance property. Returns : Promise Result Web3 , Status : ScatterJS.scatter will be set into the data field of Result if success.","title":"ScatterExtension"},{"location":"page/apiRef/extensionWrapper/#extends","text":"ExtensionWrapper","title":"Extends"},{"location":"page/apiRef/extensionWrapper/#constructor","text":"constructor()","title":"Constructor"},{"location":"page/apiRef/extensionWrapper/#property","text":"","title":"Property"},{"location":"page/apiRef/extensionWrapper/#checker","text":"Type: ScatterChecker Description: Provide some basic check function such as isLogin, isMainnet etc.","title":"checker"},{"location":"page/apiRef/extensionWrapper/#connector","text":"Type: ScatterConnector Description: Provide connection capability to the web extension.","title":"connector"},{"location":"page/apiRef/extensionWrapper/#contractcaller","text":"Type: ScatterContractCaller Description: Provide smart contract invoke and read capability.","title":"contractCaller"},{"location":"page/apiRef/extensionWrapper/#actions","text":"Type: ScatterActions Description: Provide sets of functions to access EOS, such as transfer, getAccount.","title":"actions"},{"location":"page/apiRef/extensionWrapper/#webjsinstance","text":"Type: ScatterJS.scatter Description: scatter instance from scatter-core.","title":"webjsInstance"},{"location":"page/apiRef/extensionWrapper/#methods","text":"","title":"Methods"},{"location":"page/apiRef/extensionWrapper/#load","text":"async load() Description Load ScatterJS.scatter instance to webjsInstance property. Returns : Promise Result Web3 , Status : ScatterJS.scatter will be set into the data field of Result if success.","title":"load"},{"location":"page/apiRef/offChainCallParam/","text":"Constructor constructor(scope = false, limit = 10) Parameters : scope - String : Query scope for this query. limit - Number : Row limit for this query. Property scope Type: String Description: memo passed by constructor. limit Type: Number Description: limit passed by constructor.","title":"OffChainCallParam"},{"location":"page/apiRef/offChainCallParam/#constructor","text":"constructor(scope = false, limit = 10) Parameters : scope - String : Query scope for this query. limit - Number : Row limit for this query.","title":"Constructor"},{"location":"page/apiRef/offChainCallParam/#property","text":"","title":"Property"},{"location":"page/apiRef/offChainCallParam/#scope","text":"Type: String Description: memo passed by constructor.","title":"scope"},{"location":"page/apiRef/offChainCallParam/#limit","text":"Type: Number Description: limit passed by constructor.","title":"limit"},{"location":"page/apiRef/transferTokenExtraInfo/","text":"Constructor constructor(memo, symbol = '') Parameters : memo - String : Transaction memo. symbol - String : Token symbol. Property memo Type: String Description: memo passed by constructor. symbol Type: String Description: symbol passed by constructor.","title":"TransferTokenExtraInfo"},{"location":"page/apiRef/transferTokenExtraInfo/#constructor","text":"constructor(memo, symbol = '') Parameters : memo - String : Transaction memo. symbol - String : Token symbol.","title":"Constructor"},{"location":"page/apiRef/transferTokenExtraInfo/#property","text":"","title":"Property"},{"location":"page/apiRef/transferTokenExtraInfo/#memo","text":"Type: String Description: memo passed by constructor.","title":"memo"},{"location":"page/apiRef/transferTokenExtraInfo/#symbol","text":"Type: String Description: symbol passed by constructor.","title":"symbol"}]}