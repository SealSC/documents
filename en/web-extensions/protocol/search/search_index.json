{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This document is for sealsc-web-extension-protocol project. sealsc-web-extension-protocol provides a set of basic classes, constants, and utility functions, make it easier for developers to develop programs that conform to the Seal SC web extension protocol.","title":"Getting started"},{"location":"page/consts/predefinedStatus/","text":"Status build function (userData)= {return new Status(0, 'success', userData)} All predefined status builders SUCCESS SUCCESS(userData) Returns: Status code: 0, msg: 'success', userData: userData NO_EXTENSION NO_EXTENSION(userData) Returns: Status code: 1, msg: 'extension not install.', userData: userData NOT_SPECIFIED_EXTENSION NOT_SPECIFIED_EXTENSION(userData) Returns: Status code: 2, msg: 'no specified web extension.', userData: userData NOT_LOADED NOT_LOADED(userData) Returns: Status code: 3, msg: 'web extension not loaded to seal proxy.', userData: userData NOT_SUPPORT NOT_SUPPORT(userData) Returns: Status code: 4, msg: 'not supported operation or type.', userData: userData NOT_LOGIN NOT_LOGIN(userData) Returns: Status code: 5, msg: 'web extension not login.', userData: userData BAD_PARAM BAD_PARAM(userData) Returns: Status code: 6, msg: 'bad action input parameter.', userData: userData NO_ACCOUNT NO_ACCOUNT(userData) Returns: Status code: 7, msg: 'no account in extension.', userData: userData UNKNOWN UNKNOWN(userData) Returns: Status code: 0x1000, msg: 'unknown error occurred', userData: userData Example predefinedStatus.SUCCESS( any data ) status: Status code: 0 msg: success userData: any data","title":"Predefined Status"},{"location":"page/consts/predefinedStatus/#status-build-function","text":"(userData)= {return new Status(0, 'success', userData)}","title":"Status build function"},{"location":"page/consts/predefinedStatus/#all-predefined-status-builders","text":"","title":"All predefined status builders"},{"location":"page/consts/predefinedStatus/#success","text":"SUCCESS(userData) Returns: Status code: 0, msg: 'success', userData: userData","title":"SUCCESS"},{"location":"page/consts/predefinedStatus/#no_extension","text":"NO_EXTENSION(userData) Returns: Status code: 1, msg: 'extension not install.', userData: userData","title":"NO_EXTENSION"},{"location":"page/consts/predefinedStatus/#not_specified_extension","text":"NOT_SPECIFIED_EXTENSION(userData) Returns: Status code: 2, msg: 'no specified web extension.', userData: userData","title":"NOT_SPECIFIED_EXTENSION"},{"location":"page/consts/predefinedStatus/#not_loaded","text":"NOT_LOADED(userData) Returns: Status code: 3, msg: 'web extension not loaded to seal proxy.', userData: userData","title":"NOT_LOADED"},{"location":"page/consts/predefinedStatus/#not_support","text":"NOT_SUPPORT(userData) Returns: Status code: 4, msg: 'not supported operation or type.', userData: userData","title":"NOT_SUPPORT"},{"location":"page/consts/predefinedStatus/#not_login","text":"NOT_LOGIN(userData) Returns: Status code: 5, msg: 'web extension not login.', userData: userData","title":"NOT_LOGIN"},{"location":"page/consts/predefinedStatus/#bad_param","text":"BAD_PARAM(userData) Returns: Status code: 6, msg: 'bad action input parameter.', userData: userData","title":"BAD_PARAM"},{"location":"page/consts/predefinedStatus/#no_account","text":"NO_ACCOUNT(userData) Returns: Status code: 7, msg: 'no account in extension.', userData: userData","title":"NO_ACCOUNT"},{"location":"page/consts/predefinedStatus/#unknown","text":"UNKNOWN(userData) Returns: Status code: 0x1000, msg: 'unknown error occurred', userData: userData","title":"UNKNOWN"},{"location":"page/consts/predefinedStatus/#example","text":"predefinedStatus.SUCCESS( any data ) status: Status code: 0 msg: success userData: any data","title":"Example"},{"location":"page/types/contractWrapper/","text":"Constructor constructor(abi, address) Parameter abi - Any Contract ABI Array, Object or any other types required by the blockchain. address - String : Contract address. Property abi Type: Any Description: Contract ABI passed by the constructor. address Type: String Contract Address passed by the constructor. contract Type: Any Description: Contract object instance of js-sdk of blockchain, such as web3.eth.Contract .","title":"ContractWrapper"},{"location":"page/types/contractWrapper/#constructor","text":"constructor(abi, address) Parameter abi - Any Contract ABI Array, Object or any other types required by the blockchain. address - String : Contract address.","title":"Constructor"},{"location":"page/types/contractWrapper/#property","text":"","title":"Property"},{"location":"page/types/contractWrapper/#abi","text":"Type: Any Description: Contract ABI passed by the constructor.","title":"abi"},{"location":"page/types/contractWrapper/#address","text":"Type: String Contract Address passed by the constructor.","title":"address"},{"location":"page/types/contractWrapper/#contract","text":"Type: Any Description: Contract object instance of js-sdk of blockchain, such as web3.eth.Contract .","title":"contract"},{"location":"page/types/extensionActions/","text":"Constructor constructor(extension) Parameter extension - ExtensionWrapper Property extension Type: ExtensionWrapper Description: ExtensionWrapper instance passed by constructor. Methods loadContract async loacContract(abi, address) Description Load smart contract to a ContractWrapper instance. Parameters : abi - Any : Contract ABI Array, Object or any other types required by the blockchain. address - String : Contract Address passed by the constructor. Returns : Promise Result ContractWrapper , Status : ContractWrapper instance will be set into the data field of Result if success. transfer async transfer(to, amount, memo, extra) Description Transfer original token of the block. Original token is the base assets of a blockchain, like ETH on Ethereum. Parameters : to - String : Assets transfer target address. amount - Number : How many tokens will be transferred. memo - String : Transaction's memo. extra - Any : Additional data to accommodate the transaction requirements of different blockchains. Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if success. transferToken async transferToken(wrapper, to, amount, extra) Description Transfer contract based token. These tokens are issued by smart contract, like ERC 20 token etc. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. to - String : Token transfer target address. amount - Number | String : How many tokens will be transferred. Some of the blockchain accept number with token symbol in the amount string, like \"1.000 EOS\". extra - Any : Additional data to accommodate the transaction requirements of different blockchains. Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if success. getAccount async getAccount() Description Get the account loaded in extension. Returns : Promise Result String , Status : Account string will be set into the data field of Result if success.","title":"ExtensionActions"},{"location":"page/types/extensionActions/#constructor","text":"constructor(extension) Parameter extension - ExtensionWrapper","title":"Constructor"},{"location":"page/types/extensionActions/#property","text":"","title":"Property"},{"location":"page/types/extensionActions/#extension","text":"Type: ExtensionWrapper Description: ExtensionWrapper instance passed by constructor.","title":"extension"},{"location":"page/types/extensionActions/#methods","text":"","title":"Methods"},{"location":"page/types/extensionActions/#loadcontract","text":"async loacContract(abi, address) Description Load smart contract to a ContractWrapper instance. Parameters : abi - Any : Contract ABI Array, Object or any other types required by the blockchain. address - String : Contract Address passed by the constructor. Returns : Promise Result ContractWrapper , Status : ContractWrapper instance will be set into the data field of Result if success.","title":"loadContract"},{"location":"page/types/extensionActions/#transfer","text":"async transfer(to, amount, memo, extra) Description Transfer original token of the block. Original token is the base assets of a blockchain, like ETH on Ethereum. Parameters : to - String : Assets transfer target address. amount - Number : How many tokens will be transferred. memo - String : Transaction's memo. extra - Any : Additional data to accommodate the transaction requirements of different blockchains. Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if success.","title":"transfer"},{"location":"page/types/extensionActions/#transfertoken","text":"async transferToken(wrapper, to, amount, extra) Description Transfer contract based token. These tokens are issued by smart contract, like ERC 20 token etc. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. to - String : Token transfer target address. amount - Number | String : How many tokens will be transferred. Some of the blockchain accept number with token symbol in the amount string, like \"1.000 EOS\". extra - Any : Additional data to accommodate the transaction requirements of different blockchains. Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if success.","title":"transferToken"},{"location":"page/types/extensionActions/#getaccount","text":"async getAccount() Description Get the account loaded in extension. Returns : Promise Result String , Status : Account string will be set into the data field of Result if success.","title":"getAccount"},{"location":"page/types/extensionChecker/","text":"Constructor constructor(extension) Parameter extension - ExtensionWrapper An instance of ExtensionWrapper . This is a pointer indicated to this class's holder. Property extension Type: ExtensionWrapper Description: ExtensionWrapper instance passed by constructor. Methods installed async installed() Description Check if the extension was installed. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if success. isMainnet async isMainnet() Description Check if extension's network is on mainnet. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if success. isLogin async isLogin() Description Check if extension is logged in. extra - Any : Additional data to accommodate the transaction requirements of different blockchains. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if success.","title":"ExtensionChecker"},{"location":"page/types/extensionChecker/#constructor","text":"constructor(extension) Parameter extension - ExtensionWrapper An instance of ExtensionWrapper . This is a pointer indicated to this class's holder.","title":"Constructor"},{"location":"page/types/extensionChecker/#property","text":"","title":"Property"},{"location":"page/types/extensionChecker/#extension","text":"Type: ExtensionWrapper Description: ExtensionWrapper instance passed by constructor.","title":"extension"},{"location":"page/types/extensionChecker/#methods","text":"","title":"Methods"},{"location":"page/types/extensionChecker/#installed","text":"async installed() Description Check if the extension was installed. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if success.","title":"installed"},{"location":"page/types/extensionChecker/#ismainnet","text":"async isMainnet() Description Check if extension's network is on mainnet. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if success.","title":"isMainnet"},{"location":"page/types/extensionChecker/#islogin","text":"async isLogin() Description Check if extension is logged in. extra - Any : Additional data to accommodate the transaction requirements of different blockchains. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if success.","title":"isLogin"},{"location":"page/types/extensionConnector/","text":"Constructor constructor(extension) Parameter extension - ExtensionWrapper An instance of ExtensionWrapper . This is a pointer indicated to this class's holder. Property extension Type: ExtensionWrapper Description: ExtensionWrapper instance passed by constructor. Methods link async link(param) Description Connect user to the extension. Parameters : param - Any : Additional data required by extension. Returns : Promise Result String , Status : Account loaded in the extension will be set into the data field of Result if success. unlink async unlink() Description Disconnect user and the web extension. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if success.","title":"ExtensionConnector"},{"location":"page/types/extensionConnector/#constructor","text":"constructor(extension) Parameter extension - ExtensionWrapper An instance of ExtensionWrapper . This is a pointer indicated to this class's holder.","title":"Constructor"},{"location":"page/types/extensionConnector/#property","text":"","title":"Property"},{"location":"page/types/extensionConnector/#extension","text":"Type: ExtensionWrapper Description: ExtensionWrapper instance passed by constructor.","title":"extension"},{"location":"page/types/extensionConnector/#methods","text":"","title":"Methods"},{"location":"page/types/extensionConnector/#link","text":"async link(param) Description Connect user to the extension. Parameters : param - Any : Additional data required by extension. Returns : Promise Result String , Status : Account loaded in the extension will be set into the data field of Result if success.","title":"link"},{"location":"page/types/extensionConnector/#unlink","text":"async unlink() Description Disconnect user and the web extension. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if success.","title":"unlink"},{"location":"page/types/extensionContractCaller/","text":"Constructor constructor(extension) Parameter extension - ExtensionWrapper An instance of ExtensionWrapper . This is a pointer indicated to this class's holder. Property extension Type: ExtensionWrapper Description: ExtensionWrapper instance passed by constructor. Methods onChainCall async onChainCall(wrapper, method, param, amount, extra) Description Invoke a smart contract's method to do some operation on blockchain. This method may change the state of blockchain. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. method - String : Which method in the contract will be called. param - Any : Data for the contract method's parameter. amount - Number : How much original token will send to the contract in this call. extra - Any : Additional data required by extension. Returns : Promise Result String , Status : Transaction hash will be set into the data field of Result if success. offChainCall async offChainCall(wrapper, method, param) Description Call smart contract and get the output or result whithout change the state of it. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. method - String : Which method in the contract will be called. param - Any : Data for the contract method's parameter. Returns : Promise Result Any , Status : Value returned by the contract will be set into the data field of Result if success.","title":"ExtensionContractCaller"},{"location":"page/types/extensionContractCaller/#constructor","text":"constructor(extension) Parameter extension - ExtensionWrapper An instance of ExtensionWrapper . This is a pointer indicated to this class's holder.","title":"Constructor"},{"location":"page/types/extensionContractCaller/#property","text":"","title":"Property"},{"location":"page/types/extensionContractCaller/#extension","text":"Type: ExtensionWrapper Description: ExtensionWrapper instance passed by constructor.","title":"extension"},{"location":"page/types/extensionContractCaller/#methods","text":"","title":"Methods"},{"location":"page/types/extensionContractCaller/#onchaincall","text":"async onChainCall(wrapper, method, param, amount, extra) Description Invoke a smart contract's method to do some operation on blockchain. This method may change the state of blockchain. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. method - String : Which method in the contract will be called. param - Any : Data for the contract method's parameter. amount - Number : How much original token will send to the contract in this call. extra - Any : Additional data required by extension. Returns : Promise Result String , Status : Transaction hash will be set into the data field of Result if success.","title":"onChainCall"},{"location":"page/types/extensionContractCaller/#offchaincall","text":"async offChainCall(wrapper, method, param) Description Call smart contract and get the output or result whithout change the state of it. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. method - String : Which method in the contract will be called. param - Any : Data for the contract method's parameter. Returns : Promise Result Any , Status : Value returned by the contract will be set into the data field of Result if success.","title":"offChainCall"},{"location":"page/types/extensionWrapper/","text":"Constructor constructor() Property checker Type: ExtensionChecker Description: provide some basic check function such as isLogin, isMainnet etc. connector Type: ExtensionConnector Description: Provide connection capability to the web extension. contractCaller Type: ExtensionContractCaller Description: Provide smart contract invoke and read capability. actions Type: ExtensionActions Description: Provide sets of functions to access blockchain, such as transfer, getAccount. webjsInstance Type: Any Description: A webjs instance of web extensions, such as web3js, eosjs etc. This property was provided for the developers who fomiliar to use the orginal js-sdk of the blockchain. Methods load async load(param) Description Load a instance of the js-sdk for the blockchain such as web3js. Parameters : param - Any : Config data required by extension. Returns : Promise Result Any , Status : A webjs instance of web extensions, such as web3js, eosjs etc. will be set into the data field of Result if success.","title":"ExtensionWrapper"},{"location":"page/types/extensionWrapper/#constructor","text":"constructor()","title":"Constructor"},{"location":"page/types/extensionWrapper/#property","text":"","title":"Property"},{"location":"page/types/extensionWrapper/#checker","text":"Type: ExtensionChecker Description: provide some basic check function such as isLogin, isMainnet etc.","title":"checker"},{"location":"page/types/extensionWrapper/#connector","text":"Type: ExtensionConnector Description: Provide connection capability to the web extension.","title":"connector"},{"location":"page/types/extensionWrapper/#contractcaller","text":"Type: ExtensionContractCaller Description: Provide smart contract invoke and read capability.","title":"contractCaller"},{"location":"page/types/extensionWrapper/#actions","text":"Type: ExtensionActions Description: Provide sets of functions to access blockchain, such as transfer, getAccount.","title":"actions"},{"location":"page/types/extensionWrapper/#webjsinstance","text":"Type: Any Description: A webjs instance of web extensions, such as web3js, eosjs etc. This property was provided for the developers who fomiliar to use the orginal js-sdk of the blockchain.","title":"webjsInstance"},{"location":"page/types/extensionWrapper/#methods","text":"","title":"Methods"},{"location":"page/types/extensionWrapper/#load","text":"async load(param) Description Load a instance of the js-sdk for the blockchain such as web3js. Parameters : param - Any : Config data required by extension. Returns : Promise Result Any , Status : A webjs instance of web extensions, such as web3js, eosjs etc. will be set into the data field of Result if success.","title":"load"},{"location":"page/types/result/","text":"Constructor constructor(data, status) Parameter data - Any Result value data. status - Status The final status of the process for this result.","title":"Result"},{"location":"page/types/result/#constructor","text":"constructor(data, status) Parameter data - Any Result value data. status - Status The final status of the process for this result.","title":"Constructor"},{"location":"page/types/status/","text":"Constructor constructor(code, msg, userData) Parameter code - Number The status code number. msg - String The message string for the status. userData - Any Custom data set in the status. Predefined Seal SC has some predefined status builder here.","title":"Status"},{"location":"page/types/status/#constructor","text":"constructor(code, msg, userData) Parameter code - Number The status code number. msg - String The message string for the status. userData - Any Custom data set in the status.","title":"Constructor"},{"location":"page/types/status/#predefined","text":"Seal SC has some predefined status builder here.","title":"Predefined"},{"location":"page/utils/utils/","text":"mulWithPow mulWithPow(original, base, pow = 1) Description original * Math.pow(base, pow) Parameters : original - String | Number : The multiplier base - String | Number : The base number pow - String | Number : The power number Returns : String : Result string Example mulWithPow(2, 10, 3) // 2 * Math.pow(10, 3) 2000 toFixedDown toFixedDown(num, fixed) Description Truncate the float number to the fixed decimal. Parameters : num - String | Number : The float number. fixed - String | Number : The decimal you want to keep. Returns : String : Result string Example toFixedDown(2.0998, 3) 2.099","title":"Functions"},{"location":"page/utils/utils/#mulwithpow","text":"mulWithPow(original, base, pow = 1) Description original * Math.pow(base, pow) Parameters : original - String | Number : The multiplier base - String | Number : The base number pow - String | Number : The power number Returns : String : Result string","title":"mulWithPow"},{"location":"page/utils/utils/#example","text":"mulWithPow(2, 10, 3) // 2 * Math.pow(10, 3) 2000","title":"Example"},{"location":"page/utils/utils/#tofixeddown","text":"toFixedDown(num, fixed) Description Truncate the float number to the fixed decimal. Parameters : num - String | Number : The float number. fixed - String | Number : The decimal you want to keep. Returns : String : Result string","title":"toFixedDown"},{"location":"page/utils/utils/#example_1","text":"toFixedDown(2.0998, 3) 2.099","title":"Example"}]}