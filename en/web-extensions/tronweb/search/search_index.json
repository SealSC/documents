{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This document is for sealsc-web-extension-tronweb project. sealsc-web-extension-tronweb is a wrapper of TronWeb based web extension, such as tronlink . This wrapper is conform Seal SC web extension protocol .","title":"Getting started"},{"location":"page/apiRef/extensionActions/","text":"Extends ExtensionActions Constructor constructor(extension) Parameter extension - TronwebExtension Property extension Type: TronwebWrapper Description: TronWeb wrapper instance passed by constructor. Methods loadContract async loacContract(abi, address) Description Load smart contract to a ContractWrapper instance. Parameters : abi - Unused : TronWeb will get the contract ABI online at the contract address. address - String : Smart contract Address. Returns : Promise Result ContractWrapper , Status : ContractWrapper instance will be set into the data field of Result if Status is SUCCESS . transfer async transfer(to, amount, memo, extra) Description Transfer TRX. Parameters : to - String : Transfer target address. amount - Number : How many TRX will be transferred. memo - Unused extra - Unused Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if Status is SUCCESS . transferToken async transferToken(wrapper, to, amount, extra) Description Transfercontract based token, such as TRC 20 token. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. to - String : Token transfer target address. amount - Number How many tokens will be transferred. extra - Unused : Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if Status is SUCCESS . getAccount async getAccount() Description Get selected account in Tronweb. Returns : Promise Result String , Status : Account string will be set into the data field of Result if Status is SUCCESS .","title":"TronwebActions"},{"location":"page/apiRef/extensionActions/#extends","text":"ExtensionActions","title":"Extends"},{"location":"page/apiRef/extensionActions/#constructor","text":"constructor(extension) Parameter extension - TronwebExtension","title":"Constructor"},{"location":"page/apiRef/extensionActions/#property","text":"","title":"Property"},{"location":"page/apiRef/extensionActions/#extension","text":"Type: TronwebWrapper Description: TronWeb wrapper instance passed by constructor.","title":"extension"},{"location":"page/apiRef/extensionActions/#methods","text":"","title":"Methods"},{"location":"page/apiRef/extensionActions/#loadcontract","text":"async loacContract(abi, address) Description Load smart contract to a ContractWrapper instance. Parameters : abi - Unused : TronWeb will get the contract ABI online at the contract address. address - String : Smart contract Address. Returns : Promise Result ContractWrapper , Status : ContractWrapper instance will be set into the data field of Result if Status is SUCCESS .","title":"loadContract"},{"location":"page/apiRef/extensionActions/#transfer","text":"async transfer(to, amount, memo, extra) Description Transfer TRX. Parameters : to - String : Transfer target address. amount - Number : How many TRX will be transferred. memo - Unused extra - Unused Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if Status is SUCCESS .","title":"transfer"},{"location":"page/apiRef/extensionActions/#transfertoken","text":"async transferToken(wrapper, to, amount, extra) Description Transfercontract based token, such as TRC 20 token. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. to - String : Token transfer target address. amount - Number How many tokens will be transferred. extra - Unused : Returns : Promise Result ContractWrapper , Status : Transaction hash will be set into the data field of Result if Status is SUCCESS .","title":"transferToken"},{"location":"page/apiRef/extensionActions/#getaccount","text":"async getAccount() Description Get selected account in Tronweb. Returns : Promise Result String , Status : Account string will be set into the data field of Result if Status is SUCCESS .","title":"getAccount"},{"location":"page/apiRef/extensionChecker/","text":"Extends ExtensionActions Constructor constructor(extension) Parameter extension - TronwebExtension Property extension Type: TronwebExtension Description: TronWeb wrapper instance passed by constructor. Methods installed async installed() Description Check if Tronweb web extension was installed. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if TronWeb installed. isMainnet async isMainnet() Description Check if the connected network of TronWeb is mainnet. Returns : Promise Result Bool , Status : If Status is SUCCESS , the data field of Result will be true if TronWeb connected to Tron mainnet. isLogin async isLogin() Description Check if TronWeb is logged in. Returns : Promise Result Bool , Status : If Status is SUCCESS , the data field of Result will be true if TronWeb was login.","title":"TronwebChecker"},{"location":"page/apiRef/extensionChecker/#extends","text":"ExtensionActions","title":"Extends"},{"location":"page/apiRef/extensionChecker/#constructor","text":"constructor(extension) Parameter extension - TronwebExtension","title":"Constructor"},{"location":"page/apiRef/extensionChecker/#property","text":"","title":"Property"},{"location":"page/apiRef/extensionChecker/#extension","text":"Type: TronwebExtension Description: TronWeb wrapper instance passed by constructor.","title":"extension"},{"location":"page/apiRef/extensionChecker/#methods","text":"","title":"Methods"},{"location":"page/apiRef/extensionChecker/#installed","text":"async installed() Description Check if Tronweb web extension was installed. Returns : Promise Result Bool , Status : Boolean value true will be set into the data field of Result if TronWeb installed.","title":"installed"},{"location":"page/apiRef/extensionChecker/#ismainnet","text":"async isMainnet() Description Check if the connected network of TronWeb is mainnet. Returns : Promise Result Bool , Status : If Status is SUCCESS , the data field of Result will be true if TronWeb connected to Tron mainnet.","title":"isMainnet"},{"location":"page/apiRef/extensionChecker/#islogin","text":"async isLogin() Description Check if TronWeb is logged in. Returns : Promise Result Bool , Status : If Status is SUCCESS , the data field of Result will be true if TronWeb was login.","title":"isLogin"},{"location":"page/apiRef/extensionContractCaller/","text":"Extends ExtensionContractCaller Constructor constructor(extension) Parameter extension - TronwebExtension Property extension Type: TronwebExtension Description: TronWeb wrapper instance passed by constructor. Methods onChainCall async onChainCall(wrapper, method, param, amount, extra) Description Invoke a smart contract's method. This method may change the mart contract state. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. method - String : Which method in the contract will be called. param - Array : Data for the contract method's parameter. amount - Number : How much TRX will send to the contract in this call. extra - Unused Returns : Promise Result String , Status : Transaction hash will be set into the data field of Result if contract called successfully. offChainCall async offChainCall(wrapper, method, param) Description Call smart contract and get the output or result whithout change the state of it. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. method - String : Which method in the contract will be called. param - Array : Data for the contract method's parameter. Returns : Promise Result Any , Status : Value returned by the contract will be set into the data field of Result if contract called successfully.","title":"TronwebContractCaller"},{"location":"page/apiRef/extensionContractCaller/#extends","text":"ExtensionContractCaller","title":"Extends"},{"location":"page/apiRef/extensionContractCaller/#constructor","text":"constructor(extension) Parameter extension - TronwebExtension","title":"Constructor"},{"location":"page/apiRef/extensionContractCaller/#property","text":"","title":"Property"},{"location":"page/apiRef/extensionContractCaller/#extension","text":"Type: TronwebExtension Description: TronWeb wrapper instance passed by constructor.","title":"extension"},{"location":"page/apiRef/extensionContractCaller/#methods","text":"","title":"Methods"},{"location":"page/apiRef/extensionContractCaller/#onchaincall","text":"async onChainCall(wrapper, method, param, amount, extra) Description Invoke a smart contract's method. This method may change the mart contract state. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. method - String : Which method in the contract will be called. param - Array : Data for the contract method's parameter. amount - Number : How much TRX will send to the contract in this call. extra - Unused Returns : Promise Result String , Status : Transaction hash will be set into the data field of Result if contract called successfully.","title":"onChainCall"},{"location":"page/apiRef/extensionContractCaller/#offchaincall","text":"async offChainCall(wrapper, method, param) Description Call smart contract and get the output or result whithout change the state of it. Parameters : wrapper - ContractWrapper : A ContractWrapper instance returned by loadContract method. method - String : Which method in the contract will be called. param - Array : Data for the contract method's parameter. Returns : Promise Result Any , Status : Value returned by the contract will be set into the data field of Result if contract called successfully.","title":"offChainCall"},{"location":"page/apiRef/extensionWrapper/","text":"Extends ExtensionWrapper Constructor constructor() Property checker Type: TronwebChecker Description: Provide some basic check function such as isLogin, isMainnet etc. contractCaller Type: TronwebContractCaller Description: Provide smart contract invoke and read capability. actions Type: TronwebActions Description: Provide sets of functions to access Tron, such as transfer, getAccount. webjsInstance Type: TronWeb Description: A TronWeb instance. Methods load async load() Description Load TronWeb instance to webjsInstance property. Returns : Promise Result TronWeb , Status : A TronWeb instance will be set into the data field of Result if success.","title":"TronwebExtension"},{"location":"page/apiRef/extensionWrapper/#extends","text":"ExtensionWrapper","title":"Extends"},{"location":"page/apiRef/extensionWrapper/#constructor","text":"constructor()","title":"Constructor"},{"location":"page/apiRef/extensionWrapper/#property","text":"","title":"Property"},{"location":"page/apiRef/extensionWrapper/#checker","text":"Type: TronwebChecker Description: Provide some basic check function such as isLogin, isMainnet etc.","title":"checker"},{"location":"page/apiRef/extensionWrapper/#contractcaller","text":"Type: TronwebContractCaller Description: Provide smart contract invoke and read capability.","title":"contractCaller"},{"location":"page/apiRef/extensionWrapper/#actions","text":"Type: TronwebActions Description: Provide sets of functions to access Tron, such as transfer, getAccount.","title":"actions"},{"location":"page/apiRef/extensionWrapper/#webjsinstance","text":"Type: TronWeb Description: A TronWeb instance.","title":"webjsInstance"},{"location":"page/apiRef/extensionWrapper/#methods","text":"","title":"Methods"},{"location":"page/apiRef/extensionWrapper/#load","text":"async load() Description Load TronWeb instance to webjsInstance property. Returns : Promise Result TronWeb , Status : A TronWeb instance will be set into the data field of Result if success.","title":"load"}]}